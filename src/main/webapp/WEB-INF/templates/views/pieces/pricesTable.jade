- import ru.meridor.diana.db.entities.{Service, ServiceGroup, ServiceGroupContents}
-@ val servicesMap: Map[ServiceGroup, ServiceGroupContents]
-@ val showGlobalTotals: Boolean = false
- val showTableCaption = servicesMap.size > 1
-@ val totalPerGroupTitle: String = if (showTableCaption) "Итого по разделу:" else "Итого:"
-@ val totalPerGroupHint: String = if (showTableCaption) "Отображает стоимость работ в данном разделе" else "Отображает суммарную стоимость выбранных работ"

table.table.tables
    tbody
        tr
            td
                - for ((serviceGroup, serviceGroupContents) <- servicesMap)
                    - val childGroupsData: Map[ServiceGroup, ServiceGroupContents] = serviceGroupContents.childGroupsData
                    - val services: List[Service] = serviceGroupContents.services
                    - render("serviceGroupPriceTable.jade", Map("serviceGroup" -> serviceGroup, "services" -> services, "childGroupsData" -> childGroupsData, "showTableCaption" -> showTableCaption, "totalPerGroupTitle" -> totalPerGroupTitle, "totalPerGroupHint" -> totalPerGroupHint))
    - if (showGlobalTotals)
        tfoot
            tr
                td
                    table.table
                        tr
                            td
                                a#downloadPrices.button(href='/api/prices/pdf/export' title='Скачать все расценки' target='_blank')
                                    | Скачать
                                    i.icon-download-alt
                                |&nbsp;
                                a#downloadSelectedPrices.button.hidden(href='javascript:void(0)' title='Скачать только выбранные расценки')
                                    | Скачать выбранное
                                    i.icon-download-alt
                            td &nbsp;
                            td &nbsp;
                            td Итого:
                            td#totalPrice{:title => 'Отображает полную стоимость работ'} 0